##############################################################################
# VIRTOOLS 2001
# CK2_3D Render Engine config File
#
# Syntax: 
#
# <CK2_3D>: Must be Set at the beginning
# Tokens : (default values are given between ())
#
#	DisablePerspectiveCorrection(0) : Disables perspective correction. On recent hardware this does not have
#									  a great impact but it can be very useful in software mode 
#
#	ForceLinearFog(0) : Previous versions of the render engine forced fog modes to default to linear fog
#						mode. this was essentially caused by back-compatibility problems with DirectX 5. 
#						this has now been removed but can be re-activated though this variable.	
#
#	ForceSoftware(0) : Disables all hardware renderers
#
#	DisableFilter(0) : Disables texture filtering 
#
#	EnsureVertexShader(0) :  For DX8 rasterizer this ensure that vertex shader are supported : for example if 
#							the graphic card and driver support T&L but not vertex shaders in hardware the chosen
#							driver will be an non T&L device. Otherwise created device will only support vertex shaders
#							if they are supported in hardware.
#
#	UseIndexBuffers(0) :  For DX8 rasterizer static meshes can use an index buffer along with their vertex buffer.
#						 (Feature not completly tested for progressive meshes).
#
#	DisableDithering(0) : Disables image dithering 
# 
#	Antialias(0) : Enables image antialiasing. This represents the number of multi-sample 
#					for DX8 anti-aliasing (minimum :2). This settings only works on DX8 rasterizer 
#					for the moment.
#
#	DisableMipmap(0) : Disables mipmap generation and usage. 
#
#	DisableSpecular(0) : Disables specular highlights 
#
#	EnableScreenDump(0) : Pressing CTRL+ALT+F10 dump the content of 
#						  the screen,depth and stencil buffer to 
#						  the root of the current hard drive....	
#
#	EnableDebugMode(0)  : Pressing (CTRL + ALT + F11) starts/stops the debug 
#			   mode where rendering can be done step by step on each object  	
#
#	VertexCache(16)    : Mesh draw indices are automatically reorganised to 
#						take advantage of a potential hardware vertex cache.
#						A value of 0 disables the sorting.
#
#	TextureCacheManagement(1) : Texture cache management can be disabled to avoid
#						to have a copy of the texture stored in AGP/system memory when
#						all textures are known to fit into video memory.
#			   
#	SortTransparentObjects(1) : Transparents objects are sorted according
#					 to their distance to the camera and their priority.
#					 A value of 0 disables the sorting.
#
#	TextureVideoFormat: This entry is followed by a pixel format 
#					  that is to be used as default settings for a texture in
#					 video memory.
#	SpriteVideoFormat: This entry is followed by a pixel format 
#					  that is to be used as default settings for a sprite in
#					 video memory.
#		  Available formats :
#			_32_ARGB8888,_32_RGB888
#			_24_RGB888,
#			_16_RGB565,_16_RGB555,_16_ARGB1555,_16_ARGB4444,
#			_8_RGB332_8_ARGB2222,
#			_DXT1,_DXT3,_DXT5
#
# </CK2_3D>
#
#
#
#	All these variables can be modified at runtime with the CKRenderManager::SetRenderOptions method
#	also some of the values may need render contextes to be recreated
#
##############################################################################


<CK2_3D>
	DisablePerspectiveCorrection = 0
	ForceLinearFog	= 0
	ForceSoftware	= 0
	DisableFilter	= 0
	EnsureVertexShader = 0
	DisableDithering = 0
	DisableMipmap	= 0
	DisableSpecular = 0
	Antialias		= 0
	UseIndexBuffers = 0
	EnableScreenDump = 0
	EnableDebugMode  = 0
	VertexCache	 = 16
	SortTransparentObjects = 1
	TextureCacheManagement = 1
	TextureVideoFormat = _16_ARGB1555	
	SpriteVideoFormat = _16_ARGB1555
</CK2_3D>